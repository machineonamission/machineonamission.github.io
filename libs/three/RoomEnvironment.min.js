import{BackSide,BoxGeometry,Mesh,MeshBasicMaterial,MeshStandardMaterial,PointLight,Scene}from "./three.module.min.js";class RoomEnvironment extends Scene{constructor(e=null){super();const t=new BoxGeometry;t.deleteAttribute("uv");const s=new MeshStandardMaterial({side:BackSide}),a=new MeshStandardMaterial;let i=5;null!==e&&!1===e._useLegacyLights&&(i=900);const o=new PointLight(16777215,i,28,2);o.position.set(.418,16.199,.3),this.add(o);const n=new Mesh(t,s);n.position.set(-.757,13.219,.717),n.scale.set(31.713,28.305,28.591),this.add(n);const r=new Mesh(t,a);r.position.set(-10.906,2.009,1.846),r.rotation.set(0,-.195,0),r.scale.set(2.328,7.905,4.651),this.add(r);const c=new Mesh(t,a);c.position.set(-5.607,-.754,-.758),c.rotation.set(0,.994,0),c.scale.set(1.97,1.534,3.955),this.add(c);const d=new Mesh(t,a);d.position.set(6.167,.857,7.803),d.rotation.set(0,.561,0),d.scale.set(3.927,6.285,3.687),this.add(d);const h=new Mesh(t,a);h.position.set(-2.017,.018,6.124),h.rotation.set(0,.333,0),h.scale.set(2.002,4.566,2.064),this.add(h);const l=new Mesh(t,a);l.position.set(2.291,-.756,-2.621),l.rotation.set(0,-.286,0),l.scale.set(1.546,1.552,1.496),this.add(l);const M=new Mesh(t,a);M.position.set(-2.193,-.369,-5.547),M.rotation.set(0,.516,0),M.scale.set(3.875,3.487,2.986),this.add(M);const p=new Mesh(t,createAreaLightMaterial(50));p.position.set(-16.116,14.37,8.208),p.scale.set(.1,2.428,2.739),this.add(p);const w=new Mesh(t,createAreaLightMaterial(50));w.position.set(-16.109,18.021,-8.207),w.scale.set(.1,2.425,2.751),this.add(w);const g=new Mesh(t,createAreaLightMaterial(17));g.position.set(14.904,12.198,-1.832),g.scale.set(.15,4.265,6.331),this.add(g);const m=new Mesh(t,createAreaLightMaterial(43));m.position.set(-.462,8.89,14.52),m.scale.set(4.38,5.441,.088),this.add(m);const L=new Mesh(t,createAreaLightMaterial(20));L.position.set(3.235,11.486,-12.541),L.scale.set(2.5,2,.1),this.add(L);const u=new Mesh(t,createAreaLightMaterial(100));u.position.set(0,20,0),u.scale.set(1,.1,1),this.add(u)}dispose(){const e=new Set;this.traverse((t=>{t.isMesh&&(e.add(t.geometry),e.add(t.material))}));for(const t of e)t.dispose()}}function createAreaLightMaterial(e){const t=new MeshBasicMaterial;return t.color.setScalar(e),t}export{RoomEnvironment};